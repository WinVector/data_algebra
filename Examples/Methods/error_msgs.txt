
error (n)
op: arctan2, op_class: e, example expression: x.arctan2(y), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "y"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.arctan2(y)'})
   "row_id" ,
   ARCTAN2("x", "y") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such function: ARCTAN2


difference (w)
op: datetime_to_date, op_class: e, example expression: datetime_col_0.datetime_to_date(), db: SQLiteModel
Pandas result (expectation):
   row_id  new_column
0       0  2010-01-01
1       1  2030-04-05
2       2  2010-01-01
3       3  2030-04-05
DB result:
   row_id  new_column
0       0  2010-01-01
1       1  2030-04-05
2       2  2010-01-01
3       3  2030-04-05
query
-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "datetime_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'datetime_col_0.datetime_to_date()'})
   "row_id" ,
   DATE("datetime_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"



error (n)
op: parse_date, op_class: e, example expression: str_date_col.parse_date(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "str_date_col"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': "str_date_col.parse_date('percentY-percentm-percentd')"})
   "row_id" ,
   PARSE_DATE('%Y-%m-%d', "str_date_col") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such function: PARSE_DATE


error (n)
op: parse_datetime, op_class: e, example expression: str_datetime_col.parse_datetime(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "str_datetime_col"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': "str_datetime_col.parse_datetime('percentY-percentm-percentd percentH:percentM:percentS')"})
   "row_id" ,
   PARSE_DATETIME('%Y-%m-%d %H:%M:%S', "str_datetime_col") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such function: PARSE_DATETIME


error (n)
op: format_datetime, op_class: e, example expression: datetime_col_0.format_datetime(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "datetime_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': "datetime_col_0.format_datetime('percentY-percentm-percentd percentH:percentM:percentS')"})
   "row_id" ,
   FORMAT_DATETIME('%Y-%m-%d %H:%M:%S', "datetime_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such function: FORMAT_DATETIME


error (n)
op: format_date, op_class: e, example expression: date_col_0.format_date(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': "date_col_0.format_date('percentY-percentm-percentd')"})
   "row_id" ,
   FORMAT_DATE('%Y-%m-%d', "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such function: FORMAT_DATE


error (n)
op: dayofweek, op_class: e, example expression: date_col_0.dayofweek(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.dayofweek()'})
   "row_id" ,
   EXTRACT(DAYOFWEEK FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: dayofyear, op_class: e, example expression: date_col_0.dayofyear(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.dayofyear()'})
   "row_id" ,
   EXTRACT(DAYOFYEAR FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: dayofmonth, op_class: e, example expression: date_col_0.dayofmonth(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.dayofmonth()'})
   "row_id" ,
   EXTRACT(DAY FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: weekofyear, op_class: e, example expression: date_col_0.weekofyear(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.weekofyear()'})
   "row_id" ,
   EXTRACT(WEEK FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: month, op_class: e, example expression: date_col_0.month(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.month()'})
   "row_id" ,
   EXTRACT(MONTH FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: quarter, op_class: e, example expression: date_col_0.quarter(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.quarter()'})
   "row_id" ,
   EXTRACT(QUARTER FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: year, op_class: e, example expression: date_col_0.year(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.year()'})
   "row_id" ,
   EXTRACT(YEAR FROM "date_col_0") AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: timestamp_diff, op_class: e, example expression: datetime_col_0.timestamp_diff(datetime_col_1), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "datetime_col_0" ,
   "datetime_col_1"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'datetime_col_0.timestamp_diff(datetime_col_1)'})
   "row_id" ,
   TIMESTAMP_DIFF("datetime_col_0", "datetime_col_1", SECOND) AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such column: SECOND


error (n)
op: date_diff, op_class: e, example expression: date_col_0.date_diff(date_col_1), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_0" ,
   "date_col_1"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_0.date_diff(date_col_1)'})
   "row_id" ,
   TIMESTAMP_DIFF("date_col_0", "date_col_1", DAY) AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': no such column: DAY


error (n)
op: base_Sunday, op_class: e, example expression: date_col_1.base_Sunday(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "date_col_1"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'date_col_1.base_Sunday()'})
   "row_id" ,
   DATE_SUB("date_col_1", INTERVAL (EXTRACT(DAYOFWEEK FROM "date_col_1") - 1) DAY) AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "row_id"
': near "FROM": syntax error


error (n)
op: _ngroup, op_class: g, example expression: _ngroup(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': '_ngroup()'}, partition_by=['g'])
   "g" ,
   "row_id" ,
   NGROUP() OVER ( PARTITION BY "g"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: NGROUP


error (n)
op: median, op_class: g, example expression: x.median(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.median()'}, partition_by=['g'])
   "g" ,
   "row_id" ,
   MEDIAN("x") OVER ( PARTITION BY "g"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': MEDIAN() may not be used as a window function


error (n)
op: nunique, op_class: g, example expression: x.nunique(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.nunique()'}, partition_by=['g'])
   "g" ,
   "row_id" ,
   COUNT(DISTINCT ("x")) OVER ( PARTITION BY "g"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': DISTINCT is not supported for window functions


difference (w)
op: _count, op_class: g, example expression: _count(), db: SQLiteModel
Pandas result (expectation):
     g  row_id  new_column
0    a       0           1
1    a       1           2
2    b       2           1
3  ccc       3           1
DB result:
     g  row_id  new_column
0    a       0           2
1    a       1           2
2    b       2           1
3  ccc       3           1
query
-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': '_count()'}, partition_by=['g'])
   "g" ,
   "row_id" ,
   SUM(1) OVER ( PARTITION BY "g"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"



error (n)
op: bfill, op_class: w, example expression: z.bfill(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "z" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'z.bfill()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   BFILL("z") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: BFILL


error (n)
op: ffill, op_class: w, example expression: z.ffill(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "z" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'z.ffill()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   FFILL("z") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: FFILL


error (n)
op: first, op_class: w, example expression: x.first(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.first()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   FIRST("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: FIRST


error (n)
op: last, op_class: w, example expression: x.last(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.last()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   LAST("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: LAST


error (n)
op: rank, op_class: w, example expression: x.rank(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.rank()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   RANK("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': wrong number of arguments to function RANK()


error (n)
op: cumprod, op_class: w, example expression: x.cumprod(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.cumprod()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   CUMPROD("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: CUMPROD


error (n)
op: cumcount, op_class: w, example expression: z.cumcount(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "z" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'z.cumcount()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   CUMCOUNT("z") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: CUMCOUNT


error (n)
op: cummax, op_class: w, example expression: x.cummax(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.cummax()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   CUMMAX("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: CUMMAX


error (n)
op: cummin, op_class: w, example expression: x.cummin(), db: SQLiteModel
caught: Execution failed on sql '-- data_algebra SQL https://github.com/WinVector/data_algebra
--  dialect: SQLiteModel
--       string quote: '
--   identifier quote: "
WITH
 "table_reference_0" AS (
  SELECT
   "row_id" ,
   "x" ,
   "g"
  FROM
   "d"
 ) ,
 "extend_1" AS (
  SELECT  -- .extend({ 'new_column': 'x.cummin()'}, partition_by=['g'], order_by=['row_id'])
   "g" ,
   "row_id" ,
   CUMMIN("x") OVER ( PARTITION BY "g" ORDER BY "row_id"  )  AS "new_column"
  FROM
   "table_reference_0"
 )
SELECT  -- .order_rows(['g', 'row_id'])
 *
FROM
 "extend_1"
ORDER BY
 "g" ,
 "row_id"
': no such function: CUMMIN

